[1/13] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\SHT3x_Powersave\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/SHT3x_Powersave/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/11] Building C object esp-idf/bee_sht3x/CMakeFiles/__idf_bee_sht3x.dir/bee_sht3x.c.obj
[3/11] Building C object esp-idf/bee_mqtt/CMakeFiles/__idf_bee_mqtt.dir/bee_mqtt.c.obj
[4/11] Linking C static library esp-idf\bee_sht3x\libbee_sht3x.a
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/11] Linking C static library esp-idf\bee_mqtt\libbee_mqtt.a
[7/11] Linking C static library esp-idf\main\libmain.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable main.elf
[10/11] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/SHT3x_Powersave/build/main.bin
[11/11] cmd.exe /C "cd /D E:\SHT3x_Powersave\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/SHT3x_Powersave/build/partition_table/partition-table.bin E:/SHT3x_Powersave/build/main.bin"
main.bin binary size 0x11f820 bytes. Smallest app partition is 0x177000 bytes. 0x577e0 bytes (23%) free.
